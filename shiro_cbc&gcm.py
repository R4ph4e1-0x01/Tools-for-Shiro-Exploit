#python2
#pip install pycrypto
import sys
import base64
import uuid
from random import Random
import subprocess
from Crypto.Cipher import AES
import argparse


def shiro_gcm(key, data):
    iv = uuid.uuid4().bytes
    cipher = AES.new(base64.b64decode(key), AES.MODE_GCM, iv)
    ciphertext, tag = cipher.encrypt_and_digest(base64.b64decode(data))
    e_text = iv + ciphertext + tag
    base64_ciphertext = base64.b64encode(e_text)
    return base64_ciphertext


def shiro_aes(key, data):    
    mode =  AES.MODE_CBC
    IV   = uuid.uuid4().bytes
    encryptor = AES.new(base64.b64decode(key), mode, IV)

    payload=base64.b64decode(data)
    BS   = AES.block_size
    pad = lambda s: s + ((BS - len(s) % BS) * chr(BS - len(s) % BS)).encode()
    payload = pad(payload)
    base64_ciphertext = base64.b64encode(IV + encryptor.encrypt(payload))
    return base64_ciphertext

parser = argparse.ArgumentParser(description='')
parser.add_argument('-f', '--file', help='-f filename 读取文件', required=True)
parser.add_argument('-k', '--key', help='-k key 输入密钥，默认kPH+bIxk5D2deZiIxcaaaA==', default="kPH+bIxk5D2deZiIxcaaaA==")
args = parser.parse_args()

key = args.key
f = open(args.file)
lines = f.read()
f.close()
print("\nREAD-RAW:\n")
print(lines)
print("----------------------")

print("\nCBC:\n")
print(shiro_aes(key, lines))
print("----------------------")
print("\nGCM:\n")
print(shiro_gcm(key, lines))
